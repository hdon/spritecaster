<WARNING>
Spritecaster is in very early stages of development. The description to 
follow is theoretical at best!
</WARNING>

Spritecaster is a WYSIWIG game design tool for two-dimensional games. It 
is not an attempt to program your game for you, and it isn't a 
point-and-click Visual Basic analog for game development. But it does 
have some pretty nifty features (or at least it will when it's 
finished.)

FEATURES

Sprite "re-ripping": have you ever noticed how many game assets are out 
there on the 'net that are not in a machine-friendly format? Almost hard 
to believe, isn't it? Well now you have a point-and-click interface to 
corral those valuable sprites and start making or prototyping your game 
in minutes!

Assemble sprite "atlases": A sprite "atlas" is a unified image 
containing a collection of graphics to drive a single visual game 
element. Very similar to the machine-unfriendly sprite assets mentioned 
in the previous paragraph, there are many benefits to organizing your 
game assets this way. Let Spritecaster generate source code or run-time 
loadable data files to keep your application in sync with your atlas 
layouts! If you're designing a tileset, Spritecaster can help you 
organize your tiles in ways that make it convenient for map editors by 
placing related tiles near each other, with respect to macro-tile 
graphics like tall trees or whatever that need to take up more than one 
tile.

Artist-friendly tool for designing simple sprite-related game mechanics: 
Design your hitboxes and missile-spawn vectors from the same graphical 
environment you design your character animation in!

Request for discussion:
http://www.idevgames.com/forum/showthread.php?t=16489
